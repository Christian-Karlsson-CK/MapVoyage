@page
@model PrivacyModel
@{
    
}
<h1>@ViewData["Title"]</h1>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Map</title>
    <link rel="stylesheet" href="~/css/mapView.css" />
</head>
<body>
    <div id="toolbar">
        <button id="addPinButton">Add Pin</button>
    </div>
    <div id="map"></div>
    <div id="sidebar">
        <div id="info">Click on a marker to see details here.</div>
    </div>
    <div id="pinCreateForm">
        <label for="pinTitle">Title:</label>
        <input type="text" id="pinTitle" name="pinTitle" /><br>
        <label for="pinDescription">Description:</label>
        <input type="text" id="pinDescription" name="pinDescription" /><br>
        <label for="pinImage">Image:</label>
        <input type="file" id="pinImage" name="pinImage" accept="image/*" /><br>
        <button id="savePin">Save Pin</button>
        <button id="cancelPin">Cancel Pin</button>
    </div>

    <script>
        var map = L.map('map').setView([58.31, 15.09], 13); // Center the map and set zoom level
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);


        
        var lat, lng;
        var addingPin = false;

        function onMapClick(e) {
            if (!addingPin) return;

            lat = e.latlng.lat;
            lng = e.latlng.lng;
            
            //Sending pin data on map click, used for testing purposes.
            /*
            document.getElementById('owner').value = "a owner";
            document.getElementById('latitude').value = lat;
            document.getElementById('longitude').value = lng;
            document.getElementById('title').value = "a title";
            document.getElementById('description').value = "a description";
            document.getElementById('SendPinDataForm').submit();
            */

            console.log("Latitude:", lat);
            console.log("Longitude:", lng);

            var pinForm = document.getElementById('pinCreateForm');
            pinForm.style.left = e.originalEvent.pageX + 'px';
            pinForm.style.top = e.originalEvent.pageY + 'px';
            pinForm.style.display = 'block';

        }

        function clearForm() {
            document.getElementById('pinTitle').value = '';
            document.getElementById('pinDescription').value = '';
            document.getElementById('pinImage').value = '';
        }

        document.getElementById('addPinButton').addEventListener('click', function () {
            addingPin = true;
        });
        
        document.getElementById('savePin').addEventListener('click', function () {
            var title = document.getElementById('pinTitle').value;
            var description = document.getElementById('pinDescription').value;
            var imageInput = document.getElementById('pinImage');
            var imageFile = imageInput.files[0];
            
            
            var marker = L.marker([lat, lng]).addTo(map)
            
            if (imageFile) {
                var reader = new FileReader();
                reader.onload = function (event) {
                    var imageUrl = event.target.result;

                    marker.on('click', function () {
                        document.getElementById('info').innerHTML = '<b>' + title + '</b><br>' + description + '<br><img src="' + imageUrl + '" alt="' + title + '" style="max-width: 100%; height: auto;">';
                    });
                };

                reader.readAsDataURL(imageFile);
            } else {
                marker.on('click', function () {
                    document.getElementById('info').innerHTML = '<b>' + title + '</b><br>' + description;
                });
            }

            var pinForm = document.getElementById('pinCreateForm');
            pinForm.style.display = 'none';
            clearForm();
            addingPin = false;
        });
        document.getElementById('cancelPin').addEventListener('click', function () {
            var pinForm = document.getElementById('pinCreateForm');
            clearForm();
            pinForm.style.display = 'none';
            addingPin = false;
        });


        map.on('click', onMapClick);
    </script>


    <!--This is a hidden form to assign values to when a new pin is created by the user. -->
    <form id="SendPinDataForm" method="post" style="display: none;">
        <input id="owner" name="Owner" />
        <input id="latitude" name="Latitude" />
        <input id="longitude" name="Longitude" />
        <input id="title" name="Title" />
        <input id="description" name="Description" />
        <button type="submit" class="btn btn-primary">Submit Coordinates</button>
    </form>


    
    <!-- Testing retriving pindata from backend
    <div id="dataContainer">
        @if (Model.PinDescription != null)
        {
            <h2>@Model.PinTitle</h2>
        }
        else
        {
            <h2>No Title</h2>
        }
        
        @if (Model.PinDescription != null)
        {
            <p>@Model.PinDescription</p>
        }
        else
        {
            <p>No desc</p>
        }
    </div> -->

    <!--This is a hidden form to assign a pin ID to when a pin is selected by the user to retrieve pin data to be displayed. 
        The input named handler is needed to navigate to correct OnGet() method as asp.pages-handler can only be used on POST.
    -->
    <form id="GetPinDataForm" method="get" style="display: none;">
        <input id="id" name="Id" />
        <input id="handler" name="Handler" value="PinData" />
        <button type="submit" class="btn btn-primary">Submit PinID</button>
    </form>


</body>
</html>


