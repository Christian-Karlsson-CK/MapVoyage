@page
@model PrivacyModel
@{
    
}
<h1>@ViewData["Title"]</h1>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Map</title>
    <link rel="stylesheet" href="~/css/mapView.css" />
</head>
<body>
    <div id="toolbar">
        <button id="addPinButton">Add Pin</button>
    </div>
    <div id="map"></div>
    <div id="sidebar">
        <div id="info">Click on a marker to see details here.</div>
    </div>
    <div id="pinCreateForm">
        <label for="pinTitle">Title:</label>
        <input type="text" id="pinTitle" name="pinTitle" /><br>
        <label for="pinDescription">Description:</label>
        <input type="text" id="pinDescription" name="pinDescription" /><br>
        <label for="pinImage">Image:</label>
        <input type="file" id="pinImage" name="pinImage" accept="image/*" /><br>
        <button id="savePin">Save Pin</button>
        <button id="cancelPin">Cancel Pin</button>
    </div>

    <script src="~/js/mapView.js"></script>


    <!--This is a hidden form to assign values to when a new pin is created by the user. -->
    <form id="SendPinDataForm" method="post" >
        <input id="owner" name="Owner" />
        <input id="latitude" name="Latitude" />
        <input id="longitude" name="Longitude" />
        <input id="title" name="Title" />
        <input id="description" name="Description" />
        <button type="submit" class="btn btn-primary">Submit Coordinates</button>
    </form>


    
    <!-- Testing retriving pindata from backend
    <div id="dataContainer">
        @if (Model.PinDescription != null)
        {
            <h2>@Model.PinTitle</h2>
        }
        else
        {
            <h2>No Title</h2>
        }
        
        @if (Model.PinDescription != null)
        {
            <p>@Model.PinDescription</p>
        }
        else
        {
            <p>No desc</p>
        }
    </div> -->

    <!--This is a hidden form to assign a pin ID to when a pin is selected by the user to retrieve pin data to be displayed. 
        The input named handler is needed to navigate to correct OnGet() method as asp.pages-handler can only be used on POST.
    -->
    <form id="GetPinDataForm" method="get" style="display: none;">
        <input id="id" name="Id" />
        <input id="handler" name="Handler" value="PinData" />
        <button type="submit" class="btn btn-primary">Submit PinID</button>
    </form>


</body>
</html>


