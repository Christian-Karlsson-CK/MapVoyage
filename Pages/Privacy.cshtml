@page
@model WebApplication1testingRazor.Pages.PrivacyModel
@{
    // Check if user is authenticated.If they are, it assigns their name to username.
    // If not, it assigns the string "NotCurrentUser" to username.
    var username = User.Identity.IsAuthenticated ? User.Identity.Name : "NotCurrentUser";
}
<h1>@ViewData["Title"]</h1>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Map</title>
    <link rel="stylesheet" href="~/css/mapView.css" />
</head>
<body>
    <div id="toolbar">
        <button id="addPinButton">Add Pin</button>
    </div>
    <div id="map"></div>

    <div id="SearchAndFilter">
        <input type="text" id="searchInput" placeholder="Search..." />
        <button onclick="searchLocation()">Search</button>
        <select id="categoryDropdown" name="dropdown">
            <option value="all">All</option>
            <option value="restaurant">Restaurant</option>
            <option value="city">City</option>
            <option value="country">Country</option>
        </select>

    </div>
    <div id="sidebar">
        <!--<input type="text" id="searchBar" placeholder="Search for pins..." oninput="filterPins()">-->
        <div id="info">Click on a marker to see details here.</div>
        <button id="removePinButton" style="display:none;" onclick="removePin()">Remove Pin</button>
    </div>


    <div id="pinCreateForm">
        <label for="pinTitle">Title:</label>
        <input type="text" id="pinTitle" name="pinTitle" /><br>
        <label for="pinDescription">Description:</label>
        <input type="text" id="pinDescription" name="pinDescription" /><br>
        <label for="pinImage">Image:</label>
        <input type="file" id="pinImage" name="pinImage" accept="image/*" /><br>
        <button id="savePin">Save Pin</button>
        <button id="cancelPin">Cancel Pin</button>
    </div>

    <script src="~/js/mapView.js"></script>
    <script src="~/js/search.js"></script>

    <!-- This is a hidden div and a custom data attribute (@username) that stores the username -->
    <div id="currentUser" dataUsername="@username" style="display: none;"></div>

    <!--This is a hidden form to assign values to when a new pin is created by the user. -->
    <form id="SendPinDataForm" method="post" style="display: none;">
        <input id="owner" name="Owner" />
        <input id="latitude" name="Latitude" />
        <input id="longitude" name="Longitude" />
        <input id="title" name="Title" />
        <input id="description" name="Description" />
        <button type="submit" class="btn btn-primary">Submit Coordinates</button>
    </form>



    <!-- Testing retriving pindata from backend
    <div id="dataContainer">
    @if (Model.PinDescription != null)
    {
                <h2>@Model.PinTitle</h2>
    }
    else
    {
                <h2>No Title</h2>
    }

    @if (Model.PinDescription != null)
    {
                <p>@Model.PinDescription</p>
    }
    else
    {
                <p>No desc</p>
    }
    </div> -->
    <!--This is a hidden form to assign a pin ID to when a pin is selected by the user to retrieve pin data to be displayed.
        The input named handler is needed to navigate to correct OnGet() method as asp.pages-handler can only be used on POST.
    -->
    <form id="GetPinDataForm" method="get" style="display: none;">
        <input id="id" name="Id" />
        <input id="handler" name="Handler" value="PinData" />
        <button type="submit" class="btn btn-primary">Submit PinID</button>
    </form>

    <script>
        var LoadedPins = [];
        //Script to add all pins on map upon page loading in
        document.addEventListener('DOMContentLoaded', (event) => {
            fetch('/Privacy?handler=AllPinData')
                .then(response => response.json())
                .then(data => {
                    if (data.length > 0) {
                        data.forEach(pin => addPinToMap(pin));
                    } else {
                        console.log('No map pins found.');
                    }
                })
                .catch(error => console.error('Error fetching pin data:', error));
        });
        function addPinToMap(pin) {
            var marker = L.marker([pin.latitude, pin.longitude]).addTo(map);

            marker.on('click', function (e) {
                var pinInfo = {
                    owner: pin.owner,
                    title: pin.title,
                    description: pin.description,
                    latitude: pin.latitude,
                    longitude: pin.longitude,
                    imageLink: pin.imageLink
                };

                pinDetailsHtml = `<b>Created by: ${pinInfo.owner}</br>Title: ${pinInfo.title}</b><br>Description: ${pinInfo.description}`;
                if (pinInfo.imageLink) {
                    pinDetailsHtml += `<br><img src="${pinInfo.imageLink}" alt="${pinInfo.title}" style="max-width: 100%; height: auto;">`;
                }

                var pinDetailsElement = document.getElementById('pinDetails');
                var removeButton = document.getElementById('removePinButton');

                document.getElementById('info').innerHTML = pinDetailsHtml;

                var currentUser = document.getElementById('currentUser').getAttribute('dataUsername');
                var removeButton = document.getElementById('removePinButton');
                if (pinInfo.owner === currentUser) {
                    removeButton.style.display = 'block';
                    removeButton.onclick = function () { removePin(pinInfo.latitude, pinInfo.longitude); };
                } else {
                    removeButton.style.display = 'none';
                }
            });

            LoadedPins.push(marker);
        }
        // Make a search by tab to search button and press 'Enter' key
        $(document).ready(function () {
            $('#searchInput').keydown(function (e) {
                if (e.key === 'Enter') { // Use 'Enter' for better readability
                    e.preventDefault(); // Prevent form submission if within a form
                    searchLocation();
                }
            });

        });


    </script>


</body>
</html>


